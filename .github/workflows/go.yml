name: Build and Deploy

on:
  push:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22' # Set to your Go version

    - name: Set up Git
      run: |
        git config --global user.name "Your Name"
        git config --global user.email "your.email@example.com"

    - name: Prompt for Tag Name
      id: tag_input
      run: echo "::set-output name=tag::v${{ github.run_number }}"

    - name: Set Tag Name
      run: echo "::set-output name=tag::v${{ github.run_number }}"


    - name: Change ownership of files (if necessary)
      run: sudo chown -R $USER:$USER *

    - name: Backup constants.go
      run: cp go_jaegerle/constants.go go_jaegerle/constants.go.bak

    - name: Update version in constants.go
      run: |
        tag="${{ steps.tag_input.outputs.tag }}"
        sed -i "s/\(var VersionInfo string = \)\"[^\"]*\"/\1\"$tag\"/" go_jaegerle/constants.go

    - name: Clean up dist folder
      run: |
        rm -rf dist/*
        mkdir -p dist

    - name: Build Linux Binary
      run: |
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o jaegerLe go_jaegerle/cmd

    - name: Verify Build
      run: if [ ! -f jaegerLe ]; then echo "Build failed" && exit 1; fi

    - name: Move and Copy Files to dist
      run: |
        mv jaegerLe dist/jaegerLe
        cp -r config dist

    - name: Commit changes
      run: |
        git add .
        git commit -m "commit with tag ${{ steps.tag_input.outputs.tag }}"

    - name: Create and Push Tag
      run: |
        git tag ${{ steps.tag_input.outputs.tag }}
        git push origin development --tags

    - name: Upload Distribution Build as an Artifact
      uses: actions/upload-artifact@v3
      with:
        name: jaegerLe
        path: dist/
